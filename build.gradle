plugins {
  id('java-library')
  id('checkstyle')
  id('pmd')
  id('jacoco')
}

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8

  withJavadocJar()
  withSourcesJar()
}

checkstyle {
  toolVersion = '10.12.5'
  config = resources.text.fromFile("${rootProject.projectDir}/checkstyle.xml")
}

pmd {
  toolVersion = "6.53.0"
  ruleSetConfig = resources.text.fromFile("${rootProject.projectDir}/pmd.xml")
}

repositories {
  jcenter()
}

dependencies {
  implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
  implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.2.1'
  implementation 'org.eclipse.californium:californium-core:2.6.3'
  implementation 'com.google.code.gson:gson:2.10.1'
  implementation 'org.slf4j:slf4j-api:2.0.9'

  implementation('org.eclipse.rdf4j:rdf4j-runtime:3.7.7@pom') {
    transitive = true;
  }

  // Use JUnit test framework
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.mockito:mockito-all:1.10.19'

  runtime 'org.slf4j:slf4j-log4j12:2.0.9'
}

javadoc {
  if (JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}

tasks {

  test {
    useJUnit()
    finalizedBy(jacocoTestReport)
  }

  check {
    dependsOn(jacocoTestReport)
  }
}
